years <- as.integer(rownames(cnum))
m <- 0.15
# based on the above backcalculations we can now calculate fishing mortality
# simple calculation of one age class in single year
log(nmat[2,3]/nmat[3,4]) - m
# now doing the two age classes across all years in matrix
a <- ncol(nmat); y <- nrow(nmat)
f.mat <- log(nmat[1:(y-1),1:(a-1)]/nmat[2:y,2:a])-m
fbar.y <- apply(f.mat[1:(y-2),3:5], 1, mean)
plot(fbar.y~years[1:(y-2)], type='l')
head(f.mat)
f.mat
fbar.y
selpat <- f.mat/fbar.y
fbar.y <- apply(f.mat[1:(y-1),], 1, mean)
fbar.y
selpat <- f.mat/fbar.y
head(selpat)
apply(selpat[as.character(1988:1993),]2,mean)
apply(selpat[as.character(1988:1993),], 2,mean)
cnum <- read.table('base.dat', header=T, as.is=T, check.names=F)
cnum <- as.matrix(cnum)
m <- 0.15
a <- ncol(cnum)
y <- nrow(cnum)
noldest <- mean(cnum[,a])
noldest <- rep(noldest, y+1)
nlast <- apply(cnum, 2, mean)
nmat <- cohortN(cnum, m, nlast, noldest)
fmat <- log(nmat[1:y,1:a]/nmat[2:(y+1), 2:(a+1)])-m
selages <- as.character(3:5)
fbar.y <- apply(fmat[,selages], 1, mean)
selpat <- fmat/fbar.y
sa <- apply(selpat[as.character(1988:1993),], 2, mean)
ages <- as.numeric(names(sa))
plot(sa~ages, xlab='Age', ylab='Selection at Age', type='l', ylim=c(0,1.5))
# simulating a stock
linf <- 160;
k <- 0.1;
beta <- 3;
cond <- 0.02;
ages <- 1:14;
t0 <- 0;
la <- linf*(1-exp(-k*(ages-t0)));
# mean length at ages
la <- round(la, 2)
wa <- cond*la**beta/100
?**
2^3
2**3
2**2
# simulating a stock
linf <- 160;
k <- 0.1;
beta <- 3;
cond <- 0.02;
ages <- 1:14;
t0 <- 0;
la <- linf*(1-exp(-k*(ages-t0)));
# mean length at ages
la <- round(la, 2)
wa <- cond*la**beta/100
# mean weight at age in kg
wa <- round(wa,2)
s50 <- 5
# age at 50% selection
sa <- round(1/(1+exp(-1.1*ages-s50)))
# selection at age
p50 <- 5.5
pa <- round(1/(1 + exp(-2*(ages-p50))),2)
# proportion mature at age
m <- 0.2
la
plot(la~ages)
wa
plot(wa~la)
sa
sa <- round(1/(1+exp(-1.1*ages-s50)),2)
p50 <- 5.5
pa <- round(1/(1 + exp(-2*(ages-p50))),2)
# proportion mature at age
m <- 0.2
sa
sa <- round(1/(1+exp(-1.1*ages-s50)),2)
sa
ages
1/(1+exp(-2*(ages-p50)))
sa <- round(1/(1+exp(-1.1*ages-s50)), digitt=2)
sa <- round(1/(1+exp(-1.1*ages-s50)), digits=2)
sa
1/(1+exp(-1.1*ages-s50))
s50
-4*(-1.1)
exp(4.4)
1/(1 + 81)
sa <- round(1/(1+exp(-1.1*(ages-s50))), digits=2)
sa
plot(sa~ages)
p50 <- 5.5
pa <- round(1/(1 + exp(-2*(ages-p50))), digits=2)
pa
plot(pa~ages)
fmult <- 0.5
fmort <- fmult*sa[1]
z <- fmort + m[1]
r <- 1000
n1 <- r
c1 <- (fmort/z)*(1-exp(-z))*n1
w1 <- w[1]
y1 <- w1*c1
n2 <- n1*exp(-z)
w1 <- wa[1]
y1 <- w1*c1
n2 <- n1*exp(-z)
w1
wa[1]
y1
c1
fmort
sa
n1
2
n2
stocksize <- function(r, fmult, ages, sa, wa, m) {
n <- r;
c <- NULL; w <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
return(data.frame(age=ages, pop=n, catch=c, weight=w, yield=y))
}
n1
n2
stocksize <- function(r, fmult, ages, sa, wa, m) {
n <- r;
c <- NULL; w <- NULL; y <- NULL;
for (i in 2:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
return(data.frame(age=ages, pop=n, catch=c, weight=w, yield=y))
}
stocksize(1000, 0.5, 1:2, sa=sa, wa=wa, m=0.2)
i <- 1
n
n <- 1000
c <- NULL; w <- NULL; y <- NULL;
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
n
c
w
y
n <- r;
c <- NULL; w <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
c
}
c
a
b
w
n
n <- r;
c <- NULL; w <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
ages
n
w
n <- r;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
c
w
ages
stocksize <- function(r, fmult, ages, sa, wa, m) {
n <- r;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
return(data.frame(age=ages, pop=n, catch=c, weight=w, yield=y))
}
stocksize(1000, 0.5, 1:2, sa=sa, wa=wa, m=0.2)
n
ages
ages
rm(list=list('ages'))
rm(list=c('ages'))
stocksize(1000, 0.5, 1:2, sa=sa, wa=wa, m=0.2)
age
c
w
y
1:2
n
pop
c
w
y
n <- r;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
ages <- 1:2
n <- r;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
n
ages
n
w
z
rm(list=c('n', 'w', 'c', 'i', 'y'))
n <- r;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
n <- r;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
n <- r;
w <- NULL; c <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
n
w
c
y
n.i <- r;
w <- NULL; c <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
return(data.frame(age=ages, pop=n, catch=c, weight=w, yield=y))
}
n.i <- r;
w <- NULL; c <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
w
n
stocksize <- function(r, fmult, ages, sa, wa, m) {
n.i <- r;
w <- NULL; c <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
return(data.frame(age=ages, pop=n, catch=c, weight=w, yield=y))
}
stocksize(1000, 0.5, 1:2, sa=sa, wa=wa, m=0.2)
stocksize(1000, 0.5, 1:15, sa=sa, wa=wa, m=0.2)
n.i <- r;
n <- NULL; w <- NULL; c <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
return(data.frame(age=ages, pop=n, catch=c, weight=w, yield=y))
}
stocksize <- function(r, fmult, ages, sa, wa, m) {
n.i <- r;
n <- NULL; w <- NULL; c <- NULL; y <- NULL;
for (i in 1:ages) {
fmort <- fmult*sa[i]
z <- fmort + m[i]
n.i <- n
c.i <- (fmort/z)*(1-exp(-z))*n.i
w.i <- wa[i]
y.i <- w.i*c.i
n.i <- n.i*exp(-z)
n <- c(n, n.i)
c <- c(c,c.i)
w <- c(w, w.i)
y <- c(y, y.i)
}
return(data.frame(age=ages, pop=n, catch=c, weight=w, yield=y))
}
stocksize(1000, 0.5, 1:15, sa=sa, wa=wa, m=0.2)
Fmult<-1
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-exp(-cumsum(Ztemp))
C<-prop*cumZ
Y<-sum(w*C)
cbind(Fmort,Z,C=round(C*1000))
M <- 0.2
Fmult<-1
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-exp(-cumsum(Ztemp))
C<-prop*cumZ
Y<-sum(w*C)
cbind(Fmort,Z,C=round(C*1000))
plot(C~c(1:14))
sa
r
Fmult<-0.5
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(w*C)
names(Fmort)<-as.character(3:14)
cbind(Fmort,Z,C=round(C*1000))
alpha<-0.0005
K<-20000
Linf<-160
k<-0.1
beta<-3
cond<-0.02
ages<-1:14
t0<-0
la<-Linf*(1-exp(-k*(ages-t0)))            # Mean length at age
la<-round(la,2)
wa<-cond*la**beta/1000                    # Mean weight at age in kg
wa<-round(wa,2)
s50<-5                                    # Age at 50% selection
sa<-round(1/(1+exp(-1.1*(ages-s50))),2)   # Selection at age
p50<-5.5
pa<-round(1/(1+exp(-2*(ages-p50))),2)   # Proportion mature at age
M<-0.2
yrfun<-function(Fmult,M,sa,wa){
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-exp(-cumsum(Ztemp))
C<-prop*cumZ
Y<-sum(wa*C)
return(Y)
}
Fvec<-(0:150/100)
yr<-sapply(Fvec,yrfun,M,sa,wa)
plot(Fvec,yr,type='l',xlab="F", ylab="Y divided by R (kg)")
Fvec
?sapply
abline(v=0.1)
abline(v=0.2)
abline(v=0.25)
abline(v=0.3)
abline(v=0.33)
