vb.sse <- function(b) {
linf <- b$linf;
k <- b$k;
age <- age;
lhat <- vonb(linf, k, age);
sse <- sum((l-lhat)^2);
return(sse)
}
vonb(b, age=2:14)
vb.sse(b, age=2:14)
# function to produce sum of squared errors between vonb prediction and data
vb.sse <- function(b, ...) {
linf <- b$linf;
k <- b$k;
age <- age;
lhat <- vonb(linf, k, age);
sse <- sum((l-lhat)^2);
return(sse)
}
vb.sse(b, age=2:14)
vb.sse <- function(b, age) {
linf <- b$linf;
k <- b$k;
age <- age;
lhat <- vonb(linf, k, age);
sse <- sum((l-lhat)^2);
return(sse)
}
vb.sse(b, age=2:14)
vb.sse <- function(b) {
lhat <- vonb(b);
sse <- sum((l-lhat)^2);
return(sse)
}
-log(length.coef[2])
length.coef[1] / (1-length.coef[2])
b <- c(43.66355, 0.2708257, 2:14)
vb.sse(b)
vb.sse <- function(b) {
lhat <- vonb(linf=b[[1]], k=b[[2]], age=b[[3]]);
sse <- sum((l-lhat)^2);
return(sse)
}
b <- list(linf=43.66355, k=0.2708257, age=2:14)
b
vb.sse(b)
vb.sse(b, l=L)
vb.sse <- function(b, l) {
lhat <- vonb(linf=b[[1]], k=b[[2]], age=b[[3]]);
sse <- sum((l-lhat)^2);
return(sse)
}
vb.sse(b, l=L)
est <- nlm(vb.sse, c(100, 0.1, 0), typesize=c(100, 0.1, 0.001))
est <- nlm(vb.sse, c(100, 0.1, 0)
)
est <- nlm(vb.sse, c(100, 0.1, 0, L)
)
?nlm
l <- L
vb.sse <- function(b) {
lhat <- vonb(linf=b[[1]], k=b[[2]], age=b[[3]]);
sse <- sum((l-lhat)^2);
return(sse)
}
est <- nlm(vb.sse, c(100, 0.1, 0))
est
plot(L~time)
points(lengths~age, data=vonb(est$estimate))
est.estimate
est$estimate
pred.lengths <- vonb(est$estimate[1], est$estimate[2], age=time, t0=est$estimate[3])
plot(L~time)
points(lengths~age, data=vonb(est$estimate))
est <- nlm(vb.sse, c(100, 0.1, 0), typesize=c(100, 0.1, 0.001))
pred.lengths <- vonb(est$estimate[1], est$estimate[2], age=time, t0=est$estimate[3])
plot(L~time)
points(lengths~age, data=pred.lengths)
pred.lengths
plot(pred.lengths)
est
?cbind
pred.lengths <- vonb(est$estimate[1], est$estimate[2], age=time, t0=0)
plot(L~time)
points(lengths~age, data=pred.lengths)
pred.lengths
est
est <- nlm(vb.sse, c(100, 0.1, 1:5, 0), typesize=c(100, 0.1, 1:5, 0.001))
est <- nlm(vb.sse, c(100, 0.1, 1:5, 0))
est
# write a von Bertalanffy function to predict length at age with specified parameters
vonb <- function(b) {
linf <- b[1];
k <- b[2];
t0 <- b[3];
len <- linf*(1-exp(-k*(age-t0)));
return(data.frame(lengths=len, age=age))
}
vb.sse <- function(b) {
lhat <- vonb(b);
sse <- sum((l-lhat)^2);
return(sse)
}
age <- c(1.5, 2.5, 3.5, 4.5, 5.5)
est <- nlm(vb.sse, c(100, 0.1, 0))
est
pred.lengths <- vonb(est$estimate)
plot(L~time)
points(lengths~age, data=pred.lengths)
plot(L~time)
points(lengths~age, data=pred.lengths, type='l')
test <- read.table('http://www.hafro.is/~lorna/haddockage')
le <- seq(15,30,1)
plot(le, dnorm(le, 23, 1.4), lwd=2)
lines(le, dnorm(le, 23, 1.4))
plot(le, pnorm((le-23)/1.4), type='o')
leA <- seq(15.5, 30.5, 1)
leB <- seq(14.5, 29.5, 1)
rbind(leA, leB)
d2 <- pnorm((leA-23)/1.4) - pnorm((leB-23)/1.4)
d2 <- pnorm((leA-23)/1.4) - pnorm((leB-23)/1.4)
plot(le,d2, type='o')
points(le, dnorm(le, 23,1.4), type='b', col='red')
plot(le, pnorm(leA-23)/1.4, type='o')
plot(le, pnorm((leA-23)/1.4), type='o')
plot(le, pnorm((leA-23)/1.4), type='o')
plot(le, pnorm((leB-23)/1.4), col='red', type='o')
plot(le, pnorm((leA-23)/1.4), type='o')
points(le, pnorm((leB-23)/1.4), col='red', type='o')
mu <- vonb(c(60, 0.18, 0))
sdev <- rep(2.4, length(a))
sdev <- rep(2.4, length(age))
leB <- seq(0.5, 59.5, 1)
age <- 1:8
mu <- vonb(c(60, 0.18, 0))
sdev <- rep(2.4, length(age))
le <- 1:60
leA <- seq(1.5, 60.5, 1)
leB <- seq(0.5, 59.5, 1)
n <- 1
m <- 0.3
for (i in age) {
n <- c(n, exp(-m)*n[i])
}
ntot <- sum(n)
p <- n/ntot
# calculating length distributions for each age
ldist <- NULL
for (i in age) {
d2 <- (pnorm((leA-mu[i])/sdev[i]) - pnorm((leB-mu[i])/sdev[i]))*p[i];
ldist <- rbind(ldist, d2)
}
matplot(le, t(ldist), type='l')
plot(le, apply(ldist, 2, sum), type='l')
leA
mu
vonb <- function(b) {
linf <- b[1];
k <- b[2];
t0 <- b[3];
len <- linf*(1-exp(-k*(age-t0)));
return(len)
}
ldist <- NULL
for (i in age) {
d2 <- (pnorm((leA-mu[i])/sdev[i]) - pnorm((leB-mu[i])/sdev[i]))*p[i];
ldist <- rbind(ldist, d2)
}
matplot(le, t(ldist), type='l')
plot(le, apply(ldist, 2, sum), type='l')
mu <- vonb(c(60, 0.18, 0))
ldist <- NULL
for (i in age) {
d2 <- (pnorm((leA-mu[i])/sdev[i]) - pnorm((leB-mu[i])/sdev[i]))*p[i];
ldist <- rbind(ldist, d2)
}
matplot(le, t(ldist), type='l')
plot(le, apply(ldist, 2, sum), type='l')
le
ldist
apply(ldist, 2, sum)
f <- function(x) (2*(x^2) / (x + 2))
curve(f(x), -10, 10)
abline(v=01)
curve(f(x), -10, 10)
abline(v=-2)
sqrt((90^2) - (4*(-100)*(-18)))
90^2
-400*(-18)
400-7200
8100-7200
sqrt(900)
f <- function(x) {((x^(2/5) - (3*(x^(1/5)))))^2}
curve(f(x), -10, 10)
curve(f(x), -1,1)
curve(f(x))
abline(v=(3/10))
abline(v=(3/5))
curve(((x^(2/5)) - (3*(x^(1/5))))^2)
curve(f(x))
curve(((x^(2/5)) - (3*(x^(1/5))))^2)
curve((sin(x)*cos(x)))
curve((sin(x)*cos(x)), -10, 10)
curve((sin(x)*cos(x)), 0, 2*pi)
cos((pi/4))
sin((pi/4))
cos((pi/8))
sin((pi/8))
cos((3*pi)/2)
sin((3*pi)/2)
curve((12*(x^3) + 120*(x^2) - 0.12*x - 1.2), -10, 10)
f <- function(x) (12*(x^3) + 120*(x^2) - 0.12*x - 1.2)
a <- -10:10
plot(f(a)~a, xlim=c(-10,10), ylim=c(-10,10))
a <- seq(-10,10, by=0.01)
plot(f(a)~a, xlim=c(-10,10), ylim=c(-10,10), type='l')
rm(list=ls())
setwd('C:/Users/pfrater/Documents/classes/fish510/rCode/fish510.4')
cnum <- read.table('nsplaice.canum', header=T, as.is=T, check.names=F)
head(cnum)
str(cnum)
?read.table
# suppose we assume there is a single 11 year old fish at the end of 1995
m <- 0.15
n12 <- 1
c11 <- cnum['1995', '11']
# we can backcalculate the numbers to obtain the previous year's population
n11 <- (n12*exp(m/2)+c11)*exp(m/2)
n11
c95 <- cnum['1995', ]
n96<- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(3:12)
n95 <- (n96*exp(m/2)+c95)*exp(m/2)
names(n95) <- as.character(2:11)
n95
melt(n95)
130126/350000
350000-59102
130126/290898
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
# back to the plaice example
m <- 0.15
c95 <- cnum['1995', ]
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- c(n0,1)
c94 <- cnum['1994', ]
n1 <- n95[as.character(3:12)]
n0 <- (n1*exp(m/2)+c94)*exp(m/2)
names(n0) <- as.character(2:11)
n94 <- c(n0,1)
nmat <- rbind(n94, n95, n96)
nmat
plot(nmat)
matplot(nmat)
?matplot
matplot(nmat, pch=1)
matplot(nmat, pch=1, type='o')
matplot(nmat~2:11, pch=1, type='o')
matplot(nmat~c(2:11), pch=1, type='o')
matplot(c(2:11),nmat, pch=1, type='o')
matplot(y=nmat)
n95
n0
str(n0)
n94
str(nmat)
test <- data.frame(nmat)
head(test)
c95
c94
# back to the plaice example
m <- 0.15
c95 <- cnum['1995', ]
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- c(n0,1)
c94 <- cnum['1994', ]
n1 <- n95[as.character(3:12)]
n0 <- (n1*exp(m/2)+c94)*exp(m/2)
names(n0) <- as.character(2:11)
n94 <- c(n0,1)
n1
m <- 0.15
c95 <- cnum['1995', ]
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- c(n0,1)
n1
str(n1)
str(n95)
str(n0)
m <- 0.15
c95 <- cnum['1995', ]
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- as.vector(n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- c(n0,1)
c94 <- cnum['1994', ]
n1 <- n95[as.character(3:12)]
n0 <- (n1*exp(m/2)+c94)*exp(m/2)
names(n0) <- as.character(2:11)
n94 <- c(n0,1)
n1
n95
# back to the plaice example
m <- 0.15
c95 <- cnum['1995', ]
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- as.vector(n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- c(n0,1)
c95
str(c95)
m <- 0.15
c95 <- as.vector(cnum['1995', ])
c95
str(c95)
m <- 0.15
c95 <- c(cnum['1995', ])
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- as.vector(n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- c(n0,1)
m <- 0.15
c95 <- cnum['1995', ]
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- as.vector(n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- c(n0,1)
n95
c94 <- cnum['1994', ]
n1 <- n95[as.character(3:12)]
n1
n0 <- (n1*exp(m/2)+c94)*exp(m/2)
m
exp(m/0.15)
m <- 0.15
c95 <- cnum['1995', ]
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- as.vector(n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- c(n0,1)
str(n1)
n95
unlist(n95)
# back to the plaice example
m <- 0.15
c95 <- cnum['1995', ]
n96 <- c(0,60000,60000,60000,40000,40000,40000,10000,10000,10000,1)
names(n96) <- as.character(2:12)
n1 <- n96[as.character(3:12)]
n0 <- as.vector(n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- (n1*exp(m/2)+c95)*exp(m/2)
names(n0) <- as.character(2:11)
n95 <- unlist(c(n0,1))
c94 <- cnum['1994', ]
n1 <- n95[as.character(3:12)]
n0 <- (n1*exp(m/2)+c94)*exp(m/2)
names(n0) <- as.character(2:11)
n94 <- c(n0,1)
nmat <- rbind(n94, n95, n96)
nmat
plot(nmat[1:3,]~c(2:11))
nmat[1:3]
nmat[1:3,]
str(nmat)
str(n95)
str(n94)
c94 <- cnum['1994', ]
n1 <- n95[as.character(3:12)]
n0 <- (n1*exp(m/2)+c94)*exp(m/2)
names(n0) <- as.character(2:11)
n94 <- unlist(c(n0,1))
nmat <- rbind(n94, n95, n96)
plot(nmat[1:3,]~c(2:11))
nmat
str(nmat)
plot(nmat[1:3,]~c(2:12))
ages <- 2:12
plot(n94~ages, col='black', type='b')
plot(n95~ages, col='blue', type='b')
plot(n96~ages, col='red', type='b')
ages <- 2:12
plot(n94~ages, col='black', type='b')
points(n95~ages, col='blue', type='b')
points(n96~ages, col='red', type='b')
# functions.r contains an algorithm that does it for us
source('cohortN.r')
cnum <- read.table('nsplaice.canum', header=T, as.is=T, check.names=F)
cnum <- as.matrix(cnum)
nmat <- cohortN(cnum, m=0.15, nlast=1:ncol(cnum), noldest=1:(nrow(cnum)+1))
nmat
cnum
nmat <- c(1:15, 1:25)
nmat
cline <- cnum['1996',]
cline
ntmp <- c(2:11, )
nrow(cnum)
ntmp <- c(2:11, 28)
ntmp
n0 <- (ntmp*exp(m/2)+cline)*exp(m/2)
n0
source('cohortN.r')
cnum <- read.table('nsplaice.canum', header=T, as.is=T, check.names=F)
cnum <- as.matrix(cnum)
nmat <- cohortN(cnum, m=0.15, nlast=1:ncol(cnum), noldest=1:(nrow(cnum)+1))
nmat
head(cnum)
a <- ncol(cnum);
Y <- nrow(cnum);
nmat <- c(nlast, noldest[Y+1]);
n1 <- nlast;
for (y in Y:1) {
cline <- cnum[y,];
ntmp <- c(n1[2:a], noldest[y+1]);
n0 <- (ntmp*exp(m/2)+cline)*exp(m/2);
n0 <- c(n0, noldest[y]);
nmat <- rbind(n0,nmat);
n1 <- n0
}
nlast <- 1:ncol(cnum)
nlast
noldest <- 1:(nrow(cnum) + 1)
noldest
a <- ncol(cnum);
Y <- nrow(cnum);
nmat <- c(nlast, noldest[Y+1]);
n1 <- nlast;
for (y in Y:1) {
cline <- cnum[y,];
ntmp <- c(n1[2:a], noldest[y+1]);
n0 <- (ntmp*exp(m/2)+cline)*exp(m/2);
n0 <- c(n0, noldest[y]);
nmat <- rbind(n0,nmat);
n1 <- n0
}
nmat
str(nmat)
source('cohortN.r')
cnum <- read.table('nsplaice.canum', header=T, as.is=T, check.names=F)
cnum <- as.matrix(cnum)
nmat <- cohortN(cnum, m=0.15, nlast=1:ncol(cnum), noldest=1:(nrow(cnum)+1))
head(cnum)
rownames(cnum)
nrow(cnum)
nrow(nmat)
log(nmat[2,3]/nmat[3,4]) - m
log(nmat[1:(nrow(nmat)-1),1:2]/nmat[2:nrow(nmat),2:3])-m
log(nmat[1:(nrow(nmat)-1),1:(ncol(nmat)-1)]/nmat[2:nrow(nmat),2:ncol(nmat)])-m
# now doing the two age classes across all years in matrix
a <- ncol(nmat); y <- nrow(n,at)
f.mat <- log(nmat[1:(a-1),1:(y-1)]/nmat[2:a,2:y])-m
a <- ncol(nmat); y <- nrow(nmat)
f.mat <- log(nmat[1:(a-1),1:(y-1)]/nmat[2:a,2:y])-m
a <- ncol(nmat); y <- nrow(nmat)
f.mat <- log(nmat[1:(y-1),1:(a-1)]/nmat[2:y,2:a])-m
f.mat
fbar.y <- apply(f.mat[,3:5], 1, mean)
years <- as.integer(rownames(cnum))
plot(fbar.y~years)
fbar.y
f.mat
fbar.y <- apply(f.mat[1:(y-1),3:5], 1, mean)
plot(fbar.y~years)
f.bar.y
fbar.y
f.mat[1:y-1,]
f.mat
nrow(f.mat)
y
fbar.y <- apply(f.mat[1:(y-2),3:5], 1, mean)
plot(fbar.y~years)
fbar.y <- apply(f.mat[1:(y-2),3:5], 1, mean)
plot(fbar.y~years-1)
plot(fbar.y~(years-1))
years
years-1
plot(fbar.y~years[1:y-1])
plot(fbar.y~years[1:y-2])
years[1:y-2]
years[1:(y-2)]
plot(fbar.y~years[1:(y-2)])
plot(fbar.y~years[1:(y-2)], type='l')
