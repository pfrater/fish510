alt.tmp
alt[dimnames(alt.tmp)[[1]], dimnames(alt.tmp)[[2]]] <- alt.tmp
alt
str(alt)
apply(alt,2,sum) #sum ages
table(fish$age)
table(fish$age, mean)
apply(alt, 2, age)
apply(alt, 2, mean)
apply(alt, 2, var)
ld.tmp <- apply(alt, 1, sum)
ld.mat <- matrix(rep(ld.tmp, ncol(alt)), byrow=F, ncol=ncol(alt))
ld.mat
alk <- alt/ld.mat
alk
ld.tmp
alk <- alt/ld.tmp
alk
ld.tmp
apply(alk,2,sum)
apply(alk,1,sum)
alk
alk <- round(alt/ld.tmp, 2)
alk
dimnames(alk)
ld <- table(fish$length)
ld
ld.5 <- table(age$le5)
ld.5
str(ld.5)
ld <- matrix(ld.5, dimnames=dimnames(ld.5))
ld
test <- alk*ld
str(falk)
str(alk)
head(alk)
head(ld)
dimnames(ld)
dimnames(alk)
alk*ld
alk/ld
dim(ld)
dim(alk)
dim(ld.tmp)
str(ld.tmp)
ld <- as.vector(matrix(ld.5, dimnames=dimnames(ld.5))
)
ld
ld <- as.vector(ld.5); dimnames(ld) <- dimnames(alk)[[1]]
ld <- as.vector(ld.5); rownames(ld) <- rownames(alk)[[1]]
is.vector(ld.tmp)
ld <- as.vector(ld.5)
alk*ld
table(fish$age, fish$length)
table(age$le5, age$age)
alk*ld
round(alk*ld)
round(alk*ld) == table(age$le5, age$age)
age <- fish
age$le5 <- floor(age$length/5)*5+2.5
age.vec <- min(age$age):max(age$age)
le.vec <- seq(min(age$le5), max(age$le5), 5)
alt <- matrix(rep(0,length(age.vec)*length(le.vec)), ncol=length(age.vec))
dimnames(alt) <- list(le.vec, age.vec)
alt.tmp <- table(age$le5, age$age)
alt[dimnames(alt.tmp)[[1]], dimnames(alt.tmp)[[2]]] <- alt.tmp
# calculate the length and age distributions from simple operations of age-length matrix
ld.tmp <- apply(alt, 1, sum)
ld.mat <- matrix(rep(ld.tmp, ncol(alt)), byrow=F, ncol=ncol(alt))
alk <- round(alt/ld.tmp, 2) # alk stands for age-length key
# create length distribution
ld.5 <- table(age$le5)
ld <- as.vector(ld.5)
# create the age-length distribution by multiplying the alk by the length distribution
ald <- alk*ld
ald
apply(ald, 2, sum)
hist(apply(ald, 2, sum))
hist(apply(ald, 2, sum), breaks=5)
hist(apply(ald, 2, sum), breaks=6)
hist(apply(ald, 2, sum), breaks=7)
hist(apply(ald, 2, sum), breaks=8)
hist(apply(ald, 2, sum), breaks=10)
apply(ald, 2, sum) / sum(ald,2,sum)
apply(ald, 2, sum) / sum(apply(ald,2,sum))
ldist
alt
alk*ld.mat
all(ald==(alk*ld.mat))
all
ald
ld.mat
as.numeric(dimnames(ald)[[1]])
lengths <- as.numeric(dimnames(ald)[[1]])
lengths
mn.length <- ald*lengths
mn.lengths
mn.length
ald
lengths <- matrix(rep(as.numeric(dimnames(ald)[[1]]), ncol(ald)))
lengths
lengths <- matrix(rep(as.numeric(dimnames(ald)[[1]]), ncol(ald)), ncol=ncol(ald))
lengths
mean.la <- apply(ald*lengths, 2, sum) / apply(ald,2,sum)
mean.la
ald
12*22.5 + 5*27.5 + 1*37.5
12*22.5 + 5*27.5 + 1*37.5 / 18
(12*22.5 + 5*27.5 + 1*37.5) / 18
plot(mean.la)
plot(mean.la~unique(age$age))
mean.la
plot(mean.la~2:9)
2:9
a <- 2:9
plot(mean.la~a)
points(fish$length~fish$age, pch=2, col='blue', cex=0.5)
plot(mean.la~c(2:9))
plot(mean.la~c(2:9), cex=2)
points(fish$length~fish$age, pch=3, col='blue', cex=0.8)
mean.la <- matrix(table(fish$length, fish$age), ncol=length(unique(fish$age)))
mean.la
dimnames(mean.la) <- c(unique(fish$length), unique(fish$age))
dimnames(mean.la) <- list(unique(fish$length), unique(fish$age))
mean.la
dimnames(mean.la) <- list(sort(unique(fish$length)), sort(unique(fish$age)))
mean.la
age.length <- matrix(table(fish$length, fish$age), ncol=length(unique(fish$age)), dimnames=list(sort(unique(fish$length)), sort(unique(fish$age))))
age.length
mean.la <- matrix(rep(dimnames(age.length)[[1]], length(unique(fish$age))), ncol=ncol(age.length)
)
mean.la
mean.la <- matrix(as.numeric(rep(dimnames(age.length)[[1]]), length(unique(fish$age))), ncol=ncol(age.length))
mean.la <- matrix(as.numeric(rep(dimnames(age.length)[[1]], length(unique(fish$age)))), ncol=ncol(age.length))
mean.la
ld.mult <- matrix(as.numeric(rep(dimnames(age.length)[[1]], length(unique(fish$age)))), ncol=ncol(age.length))
mean.la <- age.length*ld.mult / apply(age.length, 2, sum)
mean.la
head(age.length)
head(ld.mult)
mean.la <- apply(age.length*ld.mult,1, sum) / apply(age.length, 2, sum)
mean.la
mean.la <- apply(age.length*ld.mult,2, sum) / apply(age.length, 2, sum)
mean.la
points(mean.la~c(2:9), col='red', pch=3, cex=1.7)
plot(mean.la~sort(unique(fish$age)))
mn.mod <- lm(mean.la~age)
coef(mn.mod)
raw.mod <- lm(length~age, data=fish)
coef(raw.mod)
age <- sort(unique(fish$age))
mn.mod <- lm(mean.la~age)
coef(mn.mod)
raw.mod <- lm(length~age, data=fish)
coef(raw.mod)
plot(mean.la~age, pch=2)
points(length~age, data=fish)
plot(mean.la~age, pch=2)
points(length~age, data=fish, col='gray50')
abline(lm(mn.mod))
abline(lm(raw.mod), col='gray50', lty=2)
head(fihs)
head(fish)
plot(live.wt~length, data=fish)
plot(sqrt(live.weight)~length, data=fish)
plot(sqrt(live.wt)~length, data=fish)
plot(log(live.wt)~length, data=fish)
plot(log(live.wt)~log(length), data=fish)
w(1,fish$length, 2)
w <- function(alpha, l, beta) alpha*(l^beta)
w(1,fish$length, 2)
plot(live.wt~length, data=fish)
20^2
40^2
w(0.75,fish$length, 2)
fish$live.weight
fish$live.wt
w(1,fish$length, 2)
w(1.2,fish$length, 2)
curve(w(1.2, x, 3), add=T)
curve(w(1.2, x, 2), add=T)
curve(w(0.5, x, 3), add=T)
curve(w(0.05, x, 3), add=T)
curve(w(0.005, x, 3), add=T)
curve(w(0.005, x, 2.5), add=T)
curve(w(0.5, x, 2.5), add=T)
curve(w(0.05, x, 2.5), add=T)
curve(w(0.1, x, 2.3), add=T)
curve(w(0.4, x, 2.3), add=T)
curve(w(0.2, x, 2.3), add=T)
plot(live.wt~length,data=fish)
curve(w(0.2, x, 2.3), add=T)
curve(w(0.2, x, 2.4), add=T)
curve(w(0.2, x, 2.45), add=T)
curve(w(0.1, x, 2.45), add=T)
summary(lm(log(live.wt)~log(length), data=fish))
exp(log(1)*3.184)
exp(log(2)*3.184)
2^3.84
2^3.184
w(-5.44,fish$length, 3.184)
w(5.44,fish$length, 3.184)
w(1,fish$length, 3.184)
curve(w(0.2, x, 3.184), add=T)
curve(w(0.02, x, 3.184), add=T)
curve(w(0.002, x, 3.184), add=T)
curve(w(0.005, x, 3.184), add=T)
plot(live.wt~length, data=fish)
curve(w(0.005, x, 3.184), add=T)
curve(w(0.004, x, 3.184), add=T)
curve(w(0.005, x, 3.184), add=T)
curve(w(0.006, x, 3.184), add=T)
w <- function(alpha, l, beta) alpha*(l^beta)
plot(live.wt~length, data=fish)
curve(w(0.006, x, 3.184))
plot(live.wt~length, data=fish)
curve(w(0.006, x, 3.184), add=T)
plot(live.wt~length, data=fish)
curve(w(0.005, x, 3.184), add=T)
plot(live.wt~length, data=fish)
curve(w(0.005, x, 3.1834), add=T)
plot(live.wt~length, data=fish)
curve(w(0.005, x, 3.1834), add=T)
log(-5.4409)
log(-1)
exp(-5.4409)
plot(live.wt~length, data=fish)
curve(w(0.00433, x, 3.1834), add=T)
summary(lm(log(live.wt)~log(length), data=fish))
exp(-5.44499)
################################################
# practicals
#
plot(live.wt~length, data=fish); curve(w(0.004317883, x, 3.1834), add=T)
plot(live.wt~length, data=fish)
plot(log(live.wt)~log(length), data=fish)
w <- function(alpha, l, beta) alpha*(l^beta)
plot(live.wt~length, data=fish); curve(w(0.004317883, x, 3.1834), add=T)
plot(log(live.wt)~log(length), data=fish)
plot(live.wt~length, data=fish); curve(w(0.004317883, x, 3.1834), add=T)
N <- 1000
N0 <- N
z <- 0.5
ages <- 1:10
for (a in ages) {
N1 <- N0*exp(-z);
N <- c(N, N1);
N0 <- N1
}
plot(N~ages)
ages
N
plot(N[1:length(ages)]~ages, type='b', main='Development of a yearclass', xlab='Age', ylab='Numbers')
?cumsum
z
nvec <- exp(-c(0,cumsum(z)))*N0
nvec
N0
N0 <- 1000
nvec <- exp(-c(0,cumsum(z)))*N0
nve
nvec
cumsum(z)
cumsum(c(3,4,5,6))
cumsum(c(1,1,2,3,5,8,13,21))
plot(cumsum(c(1,1,2,3,5,8,13,21)))
nvec <- nvec[1:length(z)]
nvec
f <- function(x) (x+1)^1/3
curve(f(x), -2,2)
curve(f(x), -20,20)
f <- function(x) (x+1)^(1/3)
curve(f(x), -20,20)
curve(f(x), -10,30)
abline(v=0, h=1)
abline(0,(1/3))
abline(1,(1/3))
cos(3*x)
cos(0)
sin(0)
sin(pi)
cos(pi)
sin(2)
exp(0)
f <- function(x) (x+1)^2
h <- function(x) 1 + sin(2*x)
g <- function(x) 1 + sin(2*x)
h <- function(x) exp(2*x)
curve(f(x), -10,10)
curve(g(x), -10,10, add=T, col='blue')
curve(h(x), -10,10, add=T, col='red')
curve(f(x), -2,2)
curve(g(x), add=T, col='blue')
curve(h(x), add=T, col='red')
abline(0,1)
abline(1,1)
curve(f(x), -2,2)
curve(g(x), add=T, col='blue')
curve(h(x), add=T, col='red')
abline(1,0)
curve(f(x), -2,2)
curve(g(x), add=T, col='blue')
curve(h(x), add=T, col='red')
abline(1,2*x)
abline(1,2)
pi
abs(pi)
rm(list=ls())
l<-tapply(m$le,m$aldur,mean)
n<-tapply(m$le,m$aldur,length)
l<-l[n>=5]         # only include data if we have more than 4 values
a<-as.numeric(names(l))
plot(a,l,xlim=c(0,12),ylim=c(0,100),xlab="Age",ylab="Llength (cm)")
# modeling fish length as a function of time
# the von Bertalanffy model
t <- 0:25
k <- 0.5
t0 <- 0
linf <- 120
lhat <- linf*(1 - exp(-k*(t - t0)));
plot(t,lhat,ylim=c(0,120),type='l',lwd=2,xlab="Age",ylab="Theoretical length at age")
text(median(t),median(lhat),paste("K=",K," linf=",linf," t0=",t0),pos=4)
# next curve
k<-0.1
english=F
source('fishData.R')
getwd()
setwd('C:/Users/pfrater/Documents/classes/fish510/rCode')
english=F
source('fishData.R')
head(fish)
fish$fre
fish$freq
mu <- c(12,24,seq(35,115,by=10))
mu
1e6
1e3
1e4
1e5
setwd('C:/Users/pfrater/Documents/classes/fish510/rCode/fish510.3')
source('functions.r')
source('init.r')
source('functions.r')
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
source('functions.r')
source('init.r')
fm <- nlm(sseprop, p0)
## fish 510.3.3.8 - models of length distribution
source('functions.r')
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
lgrps
dat
fit
pi
p0
na
1/na
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
fm
pi
?nlm
p1
p0
sseprop(p0)
p0
lgrps
fit
plot(fit~lgrps)
plot(fit~lgrps, lines)
plot(fit~lgrps, type='l')
lines(fit~lgrps)
pnorm(1 + 0.5 - mu)
mu
a <- 1:100
plot(pnorm(a) ~ a)
a <- -20:20
plot(pnorm(a) ~ a)
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
pi
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
sigma <- c(2.5, 2.2, 2.1, 2.3, 3,4,4,4,4,4,4,4)
length(sigma)
length(mu)
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
source('init.r')
fm <- nlm(sseprop, p0)
p1 <- fm$estimate
p1 <- abs(p1)
pi <- c(p1, 1-sum(p1))
fit <- rep(0,130)
for (lgrp in 1:130) {
fit[lgrp] <- sum(pi*(pnorm((lgrp+0.5-mu)/sigma)-pnorm((lgrp-0.5-mu)/sigma)))
}
plot(lgrps,dat, type='b', lwd=2, xlab='Length (cm)', ylab='Frequency')
lines(lgrps,fit)
f <- function(x) (1-cos(x) / sin(x))
curve(f(x), -10,10)
curve(f(x), -2,2)
f <- function(x) (1-cos(x)) / sin(x)
curve(f(x), -2,2)
Inf^0
Inf - Inf
0*Inf
0^0
1^Inf
log(1)
log(1.00001)
log(Inf)
log(1)
curve(log(x), 0,100)
curve(log(x), 0,1000)
curve(log(x), 0,10000)
curve(log(x), 0,10000000000)
curve(log(x), 0,Inf)
exp(1)
exp(log(Inf))
log(Inf)
exp(Inf)
