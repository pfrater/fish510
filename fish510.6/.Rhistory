Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(w*C)
# setting up a vector of cumulative Z-values
Fmult <- 1
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(w*C)
Fmult <- 1
M <- 0.2
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(w*C)
alpha<-0.0005
K<-20000
Linf<-160
k<-0.1
beta<-3
cond<-0.02
ages<-1:14
t0<-0
la<-Linf*(1-exp(-k*(ages-t0)))            # Mean length at age
la<-round(la,2)
wa<-cond*la**beta/1000                    # Mean weight at age in kg
wa<-round(wa,2)
s50<-5                                    # Age at 50% selection
sa<-round(1/(1+exp(-1.1*(ages-s50))),2)   # Selection at age
p50<-5.5
pa<-round(1/(1+exp(-2*(ages-p50))),2)   # Proportion mature at age
M<-0.2
Fmult <- 1
M <- 0.2
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(w*C)
Fmult <- 1
M <- 0.2
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(wa*C)
Y
sa
C
cbind(Fmort,Z,C=round(C*1000))
Y/r
R
Y
Fmult<-0.5
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(w*C)
names(Fmort)<-as.character(3:14)
cbind(Fmort,Z,C=round(C*1000))
Y
Y<-sum(wa*C)
names(Fmort)<-as.character(3:14)
cbind(Fmort,Z,C=round(C*1000))
Y
alpha<-0.0005
K<-20000
Linf<-160
k<-0.1
beta<-3
cond<-0.02
ages<-1:14
t0<-0
la<-Linf*(1-exp(-k*(ages-t0)))            # Mean length at age
la<-round(la,2)
wa<-cond*la**beta/1000                    # Mean weight at age in kg
wa<-round(wa,2)
s50<-5                                    # Age at 50% selection
sa<-round(1/(1+exp(-1.1*(ages-s50))),2)   # Selection at age
p50<-5.5
pa<-round(1/(1+exp(-2*(ages-p50))),2)   # Proportion mature at age
M<-0.2
yrfun<-function(Fmult,M,sa,wa){
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-exp(-cumsum(Ztemp))
C<-prop*cumZ
Y<-sum(wa*C)
return(Y)
}
Fvec<-(0:150/100)
yr<-sapply(Fvec,yrfun,M,sa,wa)
plot(Fvec,yr,type='l',xlab="F", ylab="Y divided by R (kg)")
Fvec<-(0:150/100)
yr<-sapply(Fvec,yrfun,M,sa,wa)
plot(Fvec,yr,type='l',xlab="F", ylab="Y/R (kg)")
setwd('C:/Users/pfrater/Documents/classes/fish510/rCode/fish510_5')
getwd()
setwd('C:/Users/pfrater/Documents/classes/fish510/rCode')
list.files()
setwd('C:/Users/pfrater/Documents/classes/fish510/rCode/fish510.5')
mm<-read.table("base95.dat",as.is=T,check.names=F)
mm<-as.data.frame(t(mm))
natmort<-mm$M
head(mm)
setwd('C:/Users/pfrater/Documents/classes/fish510/rCode/fish510.5')
mm<-read.table("base95.dat",as.is=T,check.names=F)
mm<-as.data.frame(t(mm))
mm<-read.table("base95.dat",as.is=T,check.names=F)
mm<-read.table("base95.dat",as.is=T,check.names=F)
mm<-as.data.frame(t(mm))
natmort<-mm$M
wt.at.age<-mm$w
selpat<-mm$sa
# Define the yield-per-recruit function
yrfun<-function(Fmult,M=natmort,sa=selpat,wa=wt.at.age){
Fmort<-Fmult*sa
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(wa*C)
return(Y)
}
# Set up the data for a Y/R plot
Fvec<-seq(0,1.5,0.01)
yr<-sapply(Fvec,yrfun,natmort,selpat,wt.at.age)
# Do histograms of #s and/or bio by age onto a Y/R-plot
# The Y/R-plot
par(fig=c(0,1,0,0.8))
plot(Fvec,yr,type='l',xlab="F", ylab="Y/R (kg)",lwd=2,ylim=c(0,2.5))
# Add points for a low and a high fishing mortality
Flomult<-0.25
Fhimult<-1
yrFlomult<-yrfun(Flomult)
yrFhimult<-yrfun(Fhimult)
points(Flomult,yrFlomult,col="green",pch=19)
arrows(Flomult,yrFlomult,0.35,1.1)
points(Fhimult,yrFhimult,col="green",pch=19)
arrows(Fhimult,yrFhimult,1.15,2.25)
# Histogram for lo F
par(fig=c(0.15,.65,0.1,.6),new=T)
Fmort<-Flomult*selpat
Z<-Fmort+natmort
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(wt.at.age*C)
names(Fmort)<-as.character(3:14)
#cbind(Fmort,Z,C=round(C*1000))
names(C)<-as.character(3:14)
barplot(C,space=0,main="C-no, F=0.25",axes=F,ylim=c(0,.16))
# Histogram for hi F
par(fig=c(0.5,1,0.5,1),new=T)
Fmort<-Fhimult*selpat
Z<-Fmort+M
prop<-(Fmort/Z)*(1-exp(-Z))
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-cumsum(Ztemp)
C<-prop*exp(-cumZ)
Y<-sum(wt.at.age*C)
names(Fmort)<-as.character(3:14)
#cbind(Fmort,Z,C=round(C*1000))
names(C)<-as.character(3:14)
barplot(C,space=0,main="C-no, F=1.0",axes=F,ylim=c(0,.16))
source("simstock.r")
source("yr.r")
Fmort<-(0:150)/100
YR<-sapply(Fmort,yrfun,M,sa,wa)
Fmax<-Fmort[YR==max(YR)]
YRmax<-max(YR)
plot(Fmort,YR,type='l',xlab="Fishing mortality", ylab="Y/R (kg)")
points(Fmax,YRmax)
lines(c(Fmax,Fmax,-0.1),c(-0.1,YRmax,YRmax)) text(Fmax,YRmax+0.05,      paste("Fmax=",Fmax," YRmax=",round(YRmax,2))      )
Fvec<-(-1:150)/100
n<-length(Fvec)
nm1<-n-1
nm2<-n-2
a<-Fvec[1:nm2]
b<-Fvec[3:n]
x<-Fvec[2:nm1]
yr<-sapply(Fvec,yrfun,M,sa,wa)
Dyr<-(yr[3:n]-yr[1:nm2])/(b-a)
D0<-Dyr[1]
F0.1<-min(x[Dyr<=D0*0.1])
YR0.1<-yr[Fvec==F0.1]
lines(c(F0.1,F0.1,-0.1),c(-0.1,YR0.1,YR0.1)) text(F0.1,YR0.1+0.05,  paste("F0.1=",F0.1," YR0.1=",round(YR0.1,2)),      pos=2)
title("Yield per recruit analysis for a simulated stock")
source("simstock.r")
source("yr.r")
Fmort<-(0:150)/100
YR<-sapply(Fmort,yrfun,M,sa,wa)
Fmax<-Fmort[YR==max(YR)]
YRmax<-max(YR)
plot(Fmort,YR,type='l',xlab="Fishing mortality", ylab="Y/R (kg)")
points(Fmax,YRmax)
lines(c(Fmax,Fmax,-0.1),c(-0.1,YRmax,YRmax))
text(Fmax,YRmax+0.05, paste("Fmax=",Fmax," YRmax=",round(YRmax,2)))
Fvec<-(-1:150)/100
n<-length(Fvec)
nm1<-n-1
nm2<-n-2
a<-Fvec[1:nm2]
b<-Fvec[3:n]
x<-Fvec[2:nm1]
yr<-sapply(Fvec,yrfun,M,sa,wa)
Dyr<-(yr[3:n]-yr[1:nm2])/(b-a)
D0<-Dyr[1]
F0.1<-min(x[Dyr<=D0*0.1])
YR0.1<-yr[Fvec==F0.1]
lines(c(F0.1,F0.1,-0.1),c(-0.1,YR0.1,YR0.1))
text(F0.1,YR0.1+0.05,  paste("F0.1=",F0.1," YR0.1=",round(YR0.1,2)),      pos=2)
title("Yield per recruit analysis for a simulated stock")
source("simstock.r")
source("yr.r")
Fmort<-(0:150)/100
YR<-sapply(Fmort,yrfun,M,sa,wa)
Fmax<-Fmort[YR==max(YR)]
YRmax<-max(YR)
plot(Fmort,YR,type='l',xlab="Fishing mortality", ylab="Y/R (kg)")
points(Fmax,YRmax)
lines(c(Fmax,Fmax,-0.1),c(-0.1,YRmax,YRmax))
text(Fmax,YRmax+0.05, paste("Fmax=",Fmax," YRmax=",round(YRmax,2)))
Fvec<-(-1:150)/100
n<-length(Fvec)
nm1<-n-1
nm2<-n-2
a<-Fvec[1:nm2]
b<-Fvec[3:n]
x<-Fvec[2:nm1]
yr<-sapply(Fvec,yrfun,M,sa,wa)
Dyr<-(yr[3:n]-yr[1:nm2])/(b-a)
D0<-Dyr[1]
F0.1<-min(x[Dyr<=D0*0.1])
YR0.1<-yr[Fvec==F0.1]
lines(c(F0.1,F0.1,-0.1),c(-0.1,YR0.1,YR0.1))
text(F0.1,YR0.1+0.05,  paste("F0.1=",F0.1," YR0.1=",round(YR0.1,2)),      pos=2)
title("Yield per recruit analysis for a simulated stock")
source("simstock.r")
source("yr.r")
Fmort<-(0:150)/100
YR<-sapply(Fmort,yrfun,M,sa,wa)
Fmax<-Fmort[YR==max(YR)]
YRmax<-max(YR)
plot(Fmort,YR,type='l',xlab="Fishing mortality", ylab="Y/R (kg)")
points(Fmax,YRmax)
lines(c(Fmax,Fmax,-0.1),c(-0.1,YRmax,YRmax))
text(Fmax,YRmax+0.05, paste("Fmax=",Fmax," YRmax=",round(YRmax,2)))
Fvec<-(-1:150)/100
n<-length(Fvec)
nm1<-n-1
nm2<-n-2
a<-Fvec[1:nm2]
b<-Fvec[3:n]
x<-Fvec[2:nm1]
yr<-sapply(Fvec,yrfun,M,sa,wa)
Dyr<-(yr[3:n]-yr[1:nm2])/(b-a)
D0<-Dyr[1]
F0.1<-min(x[Dyr<=D0*0.1])
YR0.1<-yr[Fvec==F0.1]
lines(c(F0.1,F0.1,-0.1),c(-0.1,YR0.1,YR0.1))
text(F0.1,YR0.1+0.05,  paste("F0.1=",F0.1," YR0.1=",round(YR0.1,2)),      pos=2)
title("Yield per recruit analysis for a simulated stock")
Fvec<-(-1:150)/100
n<-length(Fvec)
nm1<-n-1
nm2<-n-2
a<-Fvec[1:nm2]
b<-Fvec[3:n]
x<-Fvec[2:nm1]
yr<-sapply(Fvec,yrfun,M,sa,wa)
Dyr<-(yr[3:n]-yr[1:nm2])/(b-a)
D0<-Dyr[1]
F0.1<-min(Fvec[Dyr<=D0*0.1])
F0.1
## R code for exercises found in fish510.5.3
alpha<-0.0005
K<-20000
Linf<-160
k<-0.1
beta<-3
cond<-0.02
ages<-1:14
t0<-0
la<-Linf*(1-exp(-k*(ages-t0)))            # Mean length at age
la<-round(la,2)
wa<-cond*la**beta/1000                    # Mean weight at age in kg
wa<-round(wa,2)
s50<-5                                    # Age at 50% selection
sa<-round(1/(1+exp(-1.1*(ages-s50))),2)   # Selection at age
p50<-5.5
pa<-round(1/(1+exp(-2*(ages-p50))),2)   # Proportion mature at age
M<-0.2
srfun<-function(Fmult,M,sa,wa,pa){
Fmort<-Fmult*sa
Z<-Fmort+M
Ztemp<-c(0,Z[1:(length(Z)-1)])
cumZ<-exp(-cumsum(Ztemp))
S<-sum(wa*pa*cumZ)
return(S)
}
Fvec<-(0:150/100)
sr<-sapply(Fvec,srfun,M,sa,wa,pa)
plot(Fvec,sr,type='l',xlab="F", ylab="S devided by R (kg)")
source('~/classes/fish510/rCode/fish510.5/fish510_5_3.R')
Fvec
sr
wa
source('~/classes/fish510/rCode/fish510.5/fish510_5_3.R')
source('~/classes/fish510/rCode/fish510.5/fish510_5_3.R')
source('~/classes/fish510/rCode/fish510.5/fish510_5_3.R')
source('~/classes/fish510/rCode/fish510.5/fish510_5_3.R')
getwd()
source('~/classes/fish510/rCode/fish510.5/fish510_5_3.R')
## R code for exercises found in fish510.5.3
alpha<-0.0005
K<-20000
Linf<-160
k<-0.1
beta<-3
cond<-0.02
ages<-1:14
t0<-0
la<-Linf*(1-exp(-k*(ages-t0)))            # Mean length at age
la<-round(la,2)
wa<-cond*la**beta/1000                    # Mean weight at age in kg
wa<-round(wa,2)
s50<-5                                    # Age at 50% selection
sa<-round(1/(1+exp(-1.1*(ages-s50))),2)   # Selection at age
p50<-5.5
pa<-round(1/(1+exp(-2*(ages-p50))),2)   # Proportion mature at age
M<-0.2
source('spawningAndYieldFunctions.r')
Fvec<-(0:150/100)
sr<-sapply(Fvec,srfun,M,sa,wa,pa)
plot(Fvec,sr,type='l',xlab="F", ylab="S devided by R (kg)")
alpha<-0.0005
K<-20000
Linf<-160
k<-0.1
beta<-3
cond<-0.02
ages<-1:14
t0<-0
la<-Linf*(1-exp(-k*(ages-t0)))            # Mean length at age
la<-round(la,2)
wa<-cond*la**beta/1000                    # Mean weight at age in kg
wa<-round(wa,2)
s50<-5                                    # Age at 50% selection
sa<-round(1/(1+exp(-1.1*(ages-s50))),2)   # Selection at age
p50<-5.5
pa<-round(1/(1+exp(-2*(ages-p50))),2)   # Proportion mature at age
M<-0.2
Fvec<-seq(0,1.5,0.01)
yr<-sapply(Fvec,yrfun,M,sa,wa)
sr<-sapply(Fvec,srfun,M,sa,wa,pa)
par(mar=c(4.1,4.1,4.1,4.1))
plot(Fvec,yr,axes=F,type='l',
xlab="Fishing mortality",
ylab="Y/R",col="red",lwd=2)
axis(2)
axis(1)
par(new=T)
plot(Fvec,sr,ylab="",axes=F,type='l',xlab="",col="green",lwd=2)
axis(4)
mtext("S/R",side=4)
Fvec
yrfun
abline(v=0.1)
Fvec<-(-1:150)/100
n<-length(Fvec)
nm1<-n-1
nm2<-n-2
a<-Fvec[1:nm2]
b<-Fvec[3:n]
x<-Fvec[2:nm1]
yr<-sapply(Fvec,yrfun,M,sa,wa)
Dyr <- (yr[3:n]-yr[1:nm2])/(b-a)
D0<-Dyr[1]
F0.1<-min(Fvec[Dyr<=D0*0.1])
F0.1
Dyr
yr
Dyr
plot(Dyr~Fvec, type='l')
length(Dyr)
length(Fvec)
length(Fvec[3:152], type='l')
plot(Dyr~Fvec[3:152], type='l')
par(mfrow=c(2,2))
s50<-2
source("simstock.r")
source("yrrun.r")
title("\ns50=2")
s50<-5
source("simstock.r")
source("yrrun.r")
title("\ns50=5")
s50<-8
source("simstock.r")
source("yrrun.r")
title("\ns50=8")
s50<-10
source("simstock.r")
source("yrrun.r")
title("\ns50=10")
list.files()
par(mfrow=c(2,2))
s50<-2
source("simstock.r")
source("yr.r")
title("\ns50=2")
s50<-5
source("simstock.r")
source("yr.r")
title("\ns50=5")
s50<-8
source("simstock.r")
source("yr.r")
title("\ns50=8")
s50<-10
source("simstock.r")
source("yr.r")
title("\ns50=10")
exp(-100)
exp(-10)
Inf*0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
f <- function(s) s*exp(-s/0.1)
f(1:1000/10)
plot(f(1:1000/10))
plot(f(1:100/10))
plot(f(1:100/10))
par(mfrow=c(1,1))
plot(f(1:100/10))
setwd('C:/Users/pfrater/Documents/classes/fish510/rCode/fish510.6')
sr <- read.table('sr.dat', header=T, as.is=T)
head(sr)
sr <- read.table('sr.dat', header=T, as.is=T, check.names=F)
head(sr)
plot(R~S, data=sr)
plot(R~S, data=sr, xlim=c(0,max(sr$S)))
?nls
nl.mod <- nls(sr$r ~ bev.holt(sr$S, alpha, k), start=c(alpha=0.1, k=0.1))
nl.mod <- nls(sr$r ~ bev.holt(sr$S, alpha, k), data=sr, start=c(alpha=0.1, k=0.1))
nl.mod <- nls(r ~ bev.holt(S, alpha, k), data=sr, start=c(alpha=0.1, k=0.1))
nl.mod <- nls(r ~ bev.holt(S, alpha, k), data=sr)
plot(R~S, data=sr, xlim=c(0,max(sr$S)))
bev.holt <- function(s, alpha, k) {
r <- (alpha*s) / (1 + (s/k))
}
nl.mod <- nls(r ~ bev.holt(S, alpha, k), data=sr)
nl.mod <- nls(r ~ bev.holt(S, alpha, k), data=sr, start=c(1))
nl.mod <- nls(r ~ bev.holt(S, alpha, k), data=sr, start=c(1,1,1,1))
nl.mod <- nls(r ~ bev.holt(S, alpha, k), data=sr, start=list(alpha=0.1, k=0.1))
nl.mod <- nls(R ~ bev.holt(S, alpha, k), data=sr, start=list(alpha=0.1, k=0.1))
nl.mod <- nls(R ~ bev.holt(S, alpha, k), data=sr, start=list(alpha=1, k=1))
nl.mod <- nls(R ~ bev.holt(S, alpha, k), data=sr, start=list(alpha=0.001, k=0.001))
nl.mod <- nls(R ~ bev.holt(S, alpha, k), data=sr, start=list(alpha=0.001, k=10))
summary(nl.mod)
curve(bev.holt(x, 10.28, 18.36), add=T, col='red')
r.hats <- bev.holt(sr$S, alpha=10.28, k=18.36)
r.hats
plot(sr$R ~ r.hats)
plot(log(sr$R) ~ log(r.hats))
plot(sr$R ~ r.hats)
?nlm
sse.bev.holt <- function(s, alpha, k, data) {
r.hat <- bev.holt(s, alpha, k);
sse <- sum((data$R - r.hat)^2)
return(sse)
}
r.mins <- nlm(sse.bev.holt, c(10.28, 18.36))
r.mins <- nlm(sse.bev.holt, c(alpha=10.28, k=18.36))
r <- sr$R
s <- sr$S
plot(R~S, data=sr, xlim=c(0,max(sr$S)))
bev.holt <- function(alpha, k) {
r <- (alpha*s) / (1 + (s/k))
}
sse.bev.holt <- function(vals) {
alpha <- vals[1]
k <- vals[2]
r.hat <- bev.holt(alpha, k);
sse <- sum((data$R - r.hat)^2)
return(sse)
}
nl.mod <- nls(R ~ bev.holt(S, alpha, k), data=sr, start=list(alpha=0.001, k=10))
curve(bev.holt(x, 10.28, 18.36), add=T, col='red')
nl.mod <- nls(R ~ bev.holt(alpha, k), data=sr, start=list(alpha=0.001, k=10))
curve(bev.holt(x, 10.28, 18.36), add=T, col='red')
curve(bev.holt(10.28, 18.36), add=T, col='red')
